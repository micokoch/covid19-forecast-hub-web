# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      params:
        description: 'Arguments to deploy script'
        default: ''
  schedule:
  - cron: "0 2 * * 1-5"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    - name: Free disk space
      run: |
          df --human-readable
          sudo apt clean
          docker rmi $(docker image ls --all --quiet)
          rm --recursive --force "$AGENT_TOOLSDIRECTORY"
          
    - name: Maximize build space
      uses: easimon/maximize-build-space@v4
      with:
        root-reserve-mb: 4096
        swap-size-mb: 4096
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        
    - name: Check space available
      run: df --human-readable
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Setup Python
      uses: actions/setup-python@v2
      
    - name: Setup Ruby, JRuby and TruffleRuby
      uses: ruby/setup-ruby@v1.51.1
      
      with:
        ruby-version: 2.6.3
      
    - name: setup setuptools
      run: sudo apt-get install -y python-setuptools
    # Runs a single command using the runners shell
      
    - name: Run deploy script
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        Z_USERNAME: ${{ secrets.Z_USERNAME }}
        Z_PASSWORD: ${{ secrets.Z_PASSWORD }}
        ENV: CI
      run: bash deploy.sh ${{github.event.inputs.params}}
      
#     - name: force GitHub Pages rebuild
#       run: |
#           curl --fail --request POST \
#             --url https://api.github.com/repos/${{ github.repository }}/pages/builds \
#             --header "Authorization: Bearer $USER_TOKEN"
#       env:
#         USER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
